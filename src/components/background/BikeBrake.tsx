/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 bike_brake.gltf
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export function BikeBrake(props:any) {
  const { nodes, materials } = useGLTF('/bike_brake.gltf')
  return (
    <group {...props} dispose={null}>
      <group position={[-1.5, 3.8, -1]} rotation={[-1.4, 0, Math.PI / 6 + props.wheelPos / 25]} scale={0.005}>
        <group position={[-51, 6.59, 33.89]} rotation={[-Math.PI / 2, 0, 0]}>
          <mesh geometry={nodes.Body1.geometry} material={materials['Steel - Satin']} scale={10} />
        </group>
        <group position={[-51, 9.78, -43.29]} rotation={[-Math.PI / 2, 0, 0]}>
          <mesh geometry={nodes.Body1_2.geometry} material={materials['Steel - Satin']} scale={10} />
        </group>
        <mesh geometry={nodes.Main_Brake_Arm.geometry} material={materials['Plastic - Matte (Black)']} scale={10} />
        <mesh geometry={nodes.Secondary_Brake_Arm.geometry} material={materials['Plastic - Matte (Black)']} scale={10} />
        <mesh geometry={nodes['318_Clamp_Clamp'].geometry} material={materials['Titanium - Polished']} scale={10} />
        <mesh geometry={nodes['318_Clamp_Body'].geometry} material={materials['Titanium - Polished']} scale={10} />
        <mesh geometry={nodes.Body1_1.geometry} material={materials['Steel - Satin']} scale={10} />
      </group>
      <pointLight intensity={1} decay={2} color="#fcfcfc" position={[-12.44, 12.49, 15.73]} />
    </group>
  )
}

useGLTF.preload('/bike_brake.gltf')
